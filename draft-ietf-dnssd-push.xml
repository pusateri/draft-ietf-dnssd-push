<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC0768 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC0793 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0793.xml">
<!ENTITY RFC1035 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC1123 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1123.xml">
<!ENTITY RFC2119 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2782 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC4287 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4287.xml">
<!ENTITY RFC5246 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY RFC5966 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5966.xml">
<!ENTITY RFC6066 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6066.xml">
<!ENTITY RFC6762 SYSTEM  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY XEP-0060 PUBLIC ""  "http://xmpp.org/extensions/refs/reference.XSF.XEP-0060.xml">
<!ENTITY I-D.ietf-dnssd-hybrid SYSTEM  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-hybrid.xml">
<!ENTITY I-D.ietf-uta-tls-bcp SYSTEM  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-uta-tls-bcp.xml">
<!ENTITY I-D.ietf-tls-tls13 SYSTEM  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-tls-tls13.xml">
<!ENTITY I-D.ietf-dane-srv SYSTEM  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dane-srv.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-dnssd-push-00" ipr="trust200902">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

 <front>
   <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->

   <title abbrev="DNS Push Updates">DNS Push Updates</title>

   <!-- add 'role="editor"' below for the editors if appropriate -->

   <!-- Another author who claims to be an editor -->

   <author fullname="Tom Pusateri" initials="T.J." surname="Pusateri">
     <organization>Seeking affiliation</organization>

     <address>
       <postal>
         <street></street>

         <!-- Reorder these if your country does things differently -->

         <city>Hilton Head Island</city>

         <region>SC</region>

         <code></code>

         <country>USA</country>
       </postal>

       <phone>+1 843 473 7394</phone>

       <email>pusateri@bangj.com</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
   </author>
   <author fullname="Stuart Cheshire" initials="S." surname="Cheshire">
     <organization>Apple Inc.</organization>

     <address>
       <postal>
         <street>1 Infinite Loop</street>

         <!-- Reorder these if your country does things differently -->

         <city>Cupertino</city>

         <region>CA</region>

         <code>95014</code>

         <country>USA</country>
       </postal>

       <phone>+1 408 974 3207</phone>

       <email>cheshire@apple.com</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
   </author>

   <date year="2015" month="March"/>

   <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

   <!-- Meta-data Declarations -->

   <area>DNSSD</area>

   <workgroup>Internet Engineering Task Force</workgroup>

   <!-- WG name at the upper left corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

   <keyword>dns update push</keyword>

   <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

   <abstract>
     <t>The Domain Name System (DNS) was designed to efficiently return matching records for queries of data that is relatively static. When those records change frequently, DNS is still efficient at returning the updated results when polled. But there exists no mechanism for a client to be asynchronously notified when these changes occur. This document attempts to define a mechanism for a client to be notified of such changes to DNS records called DNS Push Updates.</t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>DNS records may be updated dynamically through either the dynamic DNS update mechanism specified in <xref target="RFC2136">RFC&nbsp;2136</xref> or in the link-local case through asynchronous multicast DNS responses as described in <xref target="RFC6762">RFC&nbsp;6762</xref>. This document specifies a protocol for interested unicast DNS clients to subscribe to DNS servers to receive new, changed, and withdrawn DNS record notifications. It is immediately relevant in the case of DNS service discovery but is not limited to that use case and provides a general DNS mechanism for DNS record change notifications. Familiarity with the DNS protocol and DNS packet formats is assumed.</t>

     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref
       target="RFC2119">RFC&nbsp;2119</xref>.</t>
     </section>
   </section>

   <section title="Motivation"> 
     <t>As the domain name system continues to adapt to new uses and changes in deployment, polling frequency has the potential to burden DNS servers at many levels throughout the network. Other network protocols have successfully deployed a publish/subscribe model to state changes following the Observer design pattern. <xref target="XEP-0060">XMPP Publish-Subscribe</xref> and <xref target="RFC4287">Atom</xref> are examples. While most DNS servers are highly tuned and capable of a high rate of query/response traffic, it is far more efficient in both bandwidth and CPU to replace the polling model with a publish/subscribe model for tracking changes to DNS records.</t>
     <t>Immediate uses include updates to PTR, SRV, and TXT records when using unicast DNS for service discovery. This allows new services to be quickly discovered and changed parameters to be sent directly to interested parties.</t>
     <t>Multicast DNS always listens on a well known link-local IP multicast group and new services and updates are sent for all group members to receive. Therefore, this protocol is not needed in a strict multicast DNS environment. However, when service discovery is used across a wide area network over unicast DNS or in a <xref target="I-D.ietf-dnssd-hybrid">hybrid unicast/multicast proxy</xref>, it provides a mechanism for clients to learn about DNS record changes in a timely manner without polling.</t>
     <t>DNS Long-Lived Queries (LLQ) was a prior attempt at providing notifications of changes to DNS records. This document builds on the experience gained with LLQ but re-uses the UPDATE mechanism defined in <xref target="RFC2136">RFC&nbsp;2136</xref> to leverage a widely deployed DNS technology.</t>
   </section>
   <section title="Overview">
     <t>DNS UPDATE was defined to provide a mechanism for clients to add or delete resource records (RRs) or resource record sets (RRSets) in the client's zone on the zone's server. However, by sending UPDATE messages from the server back to interested clients, it is possible to use the UPDATE protocol for a server to push out updates for the resource records and resource record sets as they are discovered. The client first must subscribe to an RR or RRset with a server that supports DNS Push Updates. When the client loses interest in updates to these records, it unsubscribes with the server. The DNS Push Update server for a zone MAY be a slave server, master server, or primary master server as defined in <xref target="RFC2136">RFC&nbsp;2136</xref>.</t>
     <t>DNS Push Update clients are NOT required to implement DNS Update Prerequisite processing. Prerequisites are used to perform tentative atomic test-and-set type operations on the server, and that concept has no application when it comes to an authoritative server telling a client of changes to DNS records.</t>
   </section>
   <section title="Transport">
     <t>Implementations of DNS UPDATE MAY use either User Datagram Protocol <xref target="RFC0768">(UDP)</xref> or Transmission Control Protocol <xref target="RFC0793">(TCP)</xref> as the transport protocol according to Section 2.1 of <xref target="RFC2136">RFC&nbsp;2136</xref>. However, the DNS Push Update protocol may be simplified if running over TCP because explicit teardown of subscription state is not needed. Therefore, this specification makes the use of TCP REQUIRED. The requirement in Section 6.1.3.2 of <xref target="RFC1123">RFC&nbsp;1123</xref> that states a query MUST be sent over UDP first has been relaxed in Section 4 of <xref target="RFC5966">RFC&nbsp;5966</xref>. Therefore, it is now permissible to define a TCP-only protocol for DNS.</t>        
     <t>Either end of the TCP connection can terminate all of its subscriptions by simply closing the connection. No DNS protocol message passing is needed. The lifetime of the subscriptions are tied to the lifetime of the transport protocol connection. Individual subscriptions may be dropped by request. If a client closes the connection, it is signaling that it is no longer interested in receiving updates to any of the records it has subscribed. It is informing the server that the server may release all state information it has been keeping with regards to this client. This may occur because the client computer has been disconnected from the network, has gone to sleep, or the application requiring the records has terminated. If a server closes the connection, it is informing the client that it can no longer provide updates for the subscribed records. This may occur because the server application software or operating system is restarting, the application terminated unexpectedly, the server is undergoing maintenance procedures, or the server is overloaded and can no longer provide the information to all the clients that wish to receive it. The client can try to re-subscribe at a later time or to another DNS server supporting DNS Push Updates for the zone.</t>
       <t>Transport Layer Security <xref target="RFC5246">(TLS)</xref> is well understood and deployed across many protocols running over TCP. It is designed to prevent eavesdropping, tampering, or message forgery. TLS is REQUIRED for every connection between a client subscriber and server in this protocol specification.</t>
     <t>Connection setup over TCP ensures return reachability and alleviates concerns of state overload at the server through anonymous subscriptions. All subscribers are guaranteed to be reachable by the server. Additional security measures such as authentication during TLS negotiation MAY also be employed to increase the trust relationship between client and server. Because TCP SYN flooding attacks are possible with any protocol over TCP, implementors are encouraged to use well known end host and network based countermeasures, see <xref target="IPJ.9-4-TCPSYN"/>.</t>
   </section>
   <section title="State Considerations">
     <t>Each DNS server is only capable and handling some finite number of DNS record subscriptions. This number will vary from DNS server to DNS server and is based on physical machine characteristics, network bandwidth, and operating system resource allocation. After a client establishes a connection to a DNS server, each record subscription is individually accepted or rejected. Servers may employ various techniques to limit subscriptions to a manageable level. Correspondingly, the client is free to establish simultaneous connections to alternate DNS servers that support DNS Push Updates for the zone and distribute record subscriptions at its discretion. In this way, both clients and servers can react to resource constraints. Token bucket rate limiting schemes are also effective in providing fairness by a server across numerous client requests.</t>
   </section>
   <section title="Protocol Operation">
      <section anchor="discovery" title="Discovery">
        <t>The first step to DNS Push Update subscription is to discover an appropriate DNS server that supports DNS Push Updates for the desired zone. The client must also determine which TCP port on the server is listening for connections.</t>
        <t>
          <list style="numbers">
            <t>The client begins the discovery by sending a DNS query to the local resolver with record type <xref target="RFC1035">SOA</xref> for the name of the record it wishes to subscribe.</t>
            <t>If the SOA record exists, it MUST be returned in the Answer section of the reply. If not, the server SHOULD include the SOA record for the zone of the requested name in the Authority section.</t>
            <t>If no SOA record is returned, the client then strips off the leading label from the requested name and resends the SOA query until the SOA has been discovered.</t>
			<t>If an SOA record is never returned, discovery ends here and the zone must be correctly configured to proceed.</t>
            <t>Once the SOA is known, the client sends a query with type <xref target="RFC2782">SRV</xref> for the record name <spanx style="verb">_dns-push._tcp.&lt;zone&gt;</spanx> to the SOA master name <spanx style="verb">(mname)</spanx>.</t>
            <t>A DNS server implementing DNS Push Updates for the zone MUST answer with an SRV record in the Answer section. The SRV <spanx style="verb">target</spanx> contains the name of the DNS server providing DNS Push Updates for the zone. The port number on which to contact the server is in the SRV record <spanx style="verb">port</spanx> field. The DNS server MAY include its address records in the Additional section, however, the address records SHOULD be authenticated before use as referenced in <xref target="tls_name_auth"/> and described in <xref target="I-D.ietf-dane-srv"/>.</t>
            <t>If the DNS server in the SOA does not support DNS Push Updates, it MUST return an <spanx style="verb">NXDOMAIN RCODE</spanx>.</t>
            <t>The SRV <spanx style="verb">target</spanx> and the SOA <spanx style="verb">mname</spanx> SHOULD be the same. If they are not, the name in the SRV <spanx style="verb">target</spanx> SHOULD be preferred.</t>
            <t>More than one SRV record may be returned. In this case, the <spanx style="verb">priority</spanx> and <spanx style="verb">weight</spanx> values in the returned SRV records can be used to determine the order in which to contact the servers for subscription requests. As described in <xref target="RFC2782">RFC&nbsp;2782</xref>, the server with the lowest <spanx style="verb">priority</spanx> is first contacted. If more than one server has the same <spanx style="verb">priority</spanx>, the <spanx style="verb">weight</spanx> is used as a probability indicator. Higher weights have higher probabilities of being selected. If a server is not reachable or is not willing to accept a subscription request, then a subsequent server is to be contacted.</t>
          </list>If a server closes a DNS Push Update subscription connection, the client may wish to repeat the discovery process in order to determine the preferred DNS server for subscriptions at that time.
        </t>
     </section>
     <section title="UPDATE Additions">
       <t>A DNS Push Update client will inform the DNS Push Update server by sending a subscription request to the server. The server has the option to accept or reject the subscription request. If accepted, the subscription request will stay in effect until the client revokes the subscription or until the connection between the client and the server is closed.</t>
       <section title="DNS Update Header Format">
         <t>The following figure shows the augmented DNS header UPDATE format including two new bit definitions.</t>
         <figure align="center" anchor="update_packet_header">

           <artwork align="center"><![CDATA[
                                1  1  1  1  1  1
  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                      ID                       |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|QR|   Opcode  |CS|SS|       Z      |   RCODE   |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    ZOCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    PRCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    UPCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                    ADCOUNT                    |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
               ]]></artwork>
         </figure>
         
       </section>
       <section title="Zone Section">
         <t>As specified in Section 2.3 of <xref target="RFC2136">RFC&nbsp;2136</xref>, the Zone Section contains exactly one resource record of type SOA with the name of the zone for which all records contained in the Update Section MUST be included. This is the same zone that is discovered in <xref target="discovery"/>.</t>
       </section>
       <section title="Prerequisite Section">
         <t>The Prerequesite Section MUST be empty. The client is receiving push notifications from an authoritative server and prerequisites are not applicable. The ZOCOUNT MUST be zero.</t>
       </section>
       <section title="Update Section">
         <t>The server will send all matching records for a SUBSCRIBE to the requesting client in the Update Section until an UNSUBSCRIBE is received or the connection is closed. If the resource record CLASS is ANY, the server is informing the client that the record has been deleted. If the type is ANY, all records matching the resource record name are deleted. If the TYPE is not ANY, only records of that TYPE are deleted. If the CLASS matches the CLASS of the SOA record in the Zone Section, the server is informing the client that the record has been added. A TYPE of ANY is not allowed for an add notification.</t>
         <t>Client handling of the Update Section is described below in <xref target="subscribe"/>.</t>
       </section>
       <section title="Additional Data Section">
         <t>The Additional Data Section MUST be empty. The ADCOUNT MUST be zero.</t>
       </section>
       <section anchor="subscribe" title="Push Update SUBSCRIBE and UNSUBSCRIBE">
         <t>The DNS Update header reserves seven Z bits for future use. This specification defines the Z bit in position 5 for client setup (CS). When this bit is cleared, a normal client UPDATE message is expected as defined in <xref target="RFC2136">RFC&nbsp;2136</xref>. When set, Z bit 5 declares the Z bit in position 6 for subscription setup (SS) purposes. A SUBSCRIBE is indicated by setting the SS bit while an UNSUBSCRIBE is indicated by clearing the SS bit.</t>
         <t>The Update Section contains the resource records for which the client requests a SUBSCRIBE or UNSUBSCRIBE. The number of records in the Update Section is not limited. However, all of the records MUST fall within the Zone in the Zone Section. The server MUST accept or reject SUBSCRIBE or UNSUBSCRIBE requests for all records in the Update Section with a single response error code. Therefore, it is RECOMMENDED that UPCOUNT is set to one for client requests.</t>
         <t>The client MAY SUBSCRIBE to records that are unknown to the server at the time of the request. The server MUST accept these requests and send Push Updates when matches are found in the future.</t>
       </section>
       <section title="Push Update RCODES">
         <t>If the server is willing to accept the SUBSCRIBE request from the client, it returns an UPDATE response with the RCODE set to NOERROR. Otherwise, an appropriate error code MUST be returned. The following table describes when each response error code is appropriate for a SUBSCRIBE or UNSUBSCRIBE request.</t>
         <texttable anchor="table_update_rcodes" title="Response codes">
         <ttcol align="left">Mneumonic</ttcol>
         <ttcol align="center">Value</ttcol>
         <ttcol align="left">Description</ttcol>
         <c>NOERROR</c><c>0</c><c>SUBSCRIBE or UNSUBSCRIBE successful</c>
         <c>FORMERR</c><c>1</c><c>Server failed to process request due to a format error</c>
         <c>SERVFAIL</c><c>2</c><c>Server failed to process request due to an internal error</c>
         <c>NXDOMAIN</c><c>3</c><c></c>
         <c>NOTIMP</c><c>4</c><c>Server does not implement DNS Push Updates</c>
         <c>REFUSED</c><c>5</c><c>Server refuses to process request for policy or security reasons</c>
         <c>YXDOMAIN</c><c>6</c><c>NOT USED</c>
         <c>YXRRSET</c><c>7</c><c>NOT USED</c>
         <c>NXRRSET</c><c>8</c><c>NOT USED</c>
         <c>NOTAUTH</c><c>9</c><c>Server not authoritative for the zone in the Zone Section</c>
         <c>NOTZONE</c><c>10</c><c>Zone in the Update Section not within zone in Zone Section</c>
         </texttable>
       </section>
     </section>
   </section>
   <section anchor="Acknowledgements" title="Acknowledgements">
     <t>The authors would like to thank Kiren Sekar and Marc Krochmal for previous work completed in this field. This draft has been improved due to comments from Ran Atkinson.</t>
   </section>

   <section anchor="IANA" title="IANA Considerations">
     <t>This document defines the service name: <spanx style="verb">_dns-push._tcp</spanx>. It is only applicable for the TCP protocol. This name is to be published in the IANA Service Name Registry.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>Strict TLS support is mandatory in DNS Push Updates. There is no provision for opportunistic encryption using a mechanism like <spanx style="verb">STARTTLS</spanx>.</t>
     <section title="Security Services">
       <t>It is the goal of using TLS to provide the following security services:
         <list style="hanging">
           <t hangText="Confidentiality">All application-layer communication is encrypted with the goal that no party should be able to decrypt it except the intended receiver.</t>
           <t hangText="Data integrity protection">Any changes made to the communication in transit are detectable by the receiver.</t>
           <t hangText="Authentication">An end-point of the TLS communication is authenticated as the intended entity to communicate with.</t>
         </list>
       </t>
       <t>Deployment recommendations on the appropriate key lengths and cypher suites are beyond the scope of this document. Please refer to <xref target="I-D.ietf-uta-tls-bcp">TLS Recommendations</xref> for the best current practices. Keep in mind that best practices only exist for a snapshot in time and recommendations will continue to change. Updated versions or errata may exist for these recommendations.</t>
     </section>
     <section anchor="tls_name_auth" title="TLS Name Authentication">
       <t>As described in <xref target="discovery"/>, the client discovers the DNS Push Update server using an SRV lookup for the record name <spanx style="verb">_dns-push._tcp.&lt;zone&gt;</spanx>. The server connection endpoint SHOULD then be authenticated using DANE TLSA records for the associated SRV record. This associates the target's name and port number with a trusted TLS certificate. This procedure is specified in <xref target="I-D.ietf-dane-srv"/>. This procedure uses the TLS Sever Name Indication (SNI) extension in Section 3 of <xref target="RFC6066">RFC&nbsp;6066</xref> to inform the server of the name the client has authenticated through the use of TLSA records.</t>
     </section>
     <section title="TLS Compression">
       <t>In order to reduce the chances of compression related attacks, TLS-level compression SHOULD be disabled when using TLS versions 1.2 and earlier. In the draft version of <xref target="I-D.ietf-tls-tls13">TLS 1.3</xref>, TLS-level compression has been removed completely.</t>
     </section>
     <section title="TLS Session Resumption">
       <t>TLS Session Resumption MUST be disabled on DNS Push Update servers. It is not useful to have subscription state cached for long periods of time. It is also not desirable for subscription state to be maintained while the client is not connected.</t>
     </section>
   </section>
 </middle>

 <!--  *****BACK MATTER ***** -->

 <back>
   <!-- References split into informative and normative -->

   <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

   <references title="Normative References">

     &I-D.ietf-dane-srv;

     &I-D.ietf-dnssd-hybrid;

     &I-D.ietf-tls-tls13;

     &I-D.ietf-uta-tls-bcp;

     &RFC0768;

     &RFC0793;
     
     &RFC1035;

     &RFC1123;

     &RFC2119;
     
     &RFC2136;
     
     &RFC2782;
     
     &RFC5246;

     &RFC5966;

     &RFC6066;

     &RFC6762;

   </references>

   <references title="Informative References">

     &RFC4287;
     
     &XEP-0060;
     
     <reference anchor='IPJ.9-4-TCPSYN'>
       <front>
         <title>Defenses Against TCP SYN Flooding Attacks</title>
         <author initials='W.' surname='Eddy' fullname='Wesley Eddy'>
           <organization>Verizon Federal Network Systems</organization>
           <address>
             <email>weddy@grc.nasa.gov</email>
           </address>
         </author>
         <date year='2006' month='December' />
         <keyword>TCP</keyword>
       </front>
       <seriesInfo name="The Internet Protocol Journal," value='Cisco Systems' />
       <seriesInfo name='Volume' value='9' />
       <seriesInfo name='Number' value='4' />
       <format type='PDF' octets='882020' target="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_9-4/ipj_9-4.pdf" />
       <format type='HTML' octets='65566' target="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_9-4/syn_flooding_attacks.html" /> 
     </reference>
 
   </references>

   <!-- Change Log

v00 2015-02-28  TJP   Initial version
  -->
 </back>
</rfc>
