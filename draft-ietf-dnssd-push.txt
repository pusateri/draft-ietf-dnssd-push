



Internet Engineering Task Force                              T. Pusateri
Internet-Draft                                       Seeking affiliation
Intended status: Standards Track                             S. Cheshire
Expires: September 9, 2015                                    Apple Inc.
                                                           March 8, 2015


                            DNS Push Updates
                        draft-ietf-dnssd-push-00

Abstract

   The Domain Name System (DNS) was designed to efficiently return
   matching records for queries of data that is relatively static.  When
   those records change frequently, DNS is still efficient at returning
   the updated results when polled.  But there exists no mechanism for a
   client to be asynchronously notified when these changes occur.  This
   document attempts to define a mechanism for a client to be notified
   of such changes to DNS records called DNS Push Updates.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 9, 2015.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Pusateri & Cheshire     Expires September 9, 2015               [Page 1]

Internet-Draft              DNS Push Updates                  March 2015


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Transport . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   5.  State Considerations  . . . . . . . . . . . . . . . . . . . .   5
   6.  Protocol Operation  . . . . . . . . . . . . . . . . . . . . .   5
     6.1.  Discovery . . . . . . . . . . . . . . . . . . . . . . . .   5
     6.2.  UPDATE Additions  . . . . . . . . . . . . . . . . . . . .   6
       6.2.1.  DNS Update Header Format  . . . . . . . . . . . . . .   7
       6.2.2.  Zone Section  . . . . . . . . . . . . . . . . . . . .   7
       6.2.3.  Prerequisite Section  . . . . . . . . . . . . . . . .   7
       6.2.4.  Update Section  . . . . . . . . . . . . . . . . . . .   7
       6.2.5.  Additional Data Section . . . . . . . . . . . . . . .   8
       6.2.6.  Push Update SUBSCRIBE and UNSUBSCRIBE . . . . . . . .   8
       6.2.7.  Push Update RCODES  . . . . . . . . . . . . . . . . .   8
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   9
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
     9.1.  Security Services . . . . . . . . . . . . . . . . . . . .   9
     9.2.  TLS Name Authentication . . . . . . . . . . . . . . . . .  10
     9.3.  TLS Compression . . . . . . . . . . . . . . . . . . . . .  10
     9.4.  TLS Session Resumption  . . . . . . . . . . . . . . . . .  10
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  11
     10.2.  Informative References . . . . . . . . . . . . . . . . .  12
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  12

1.  Introduction

   DNS records may be updated dynamically through either the dynamic DNS
   update mechanism specified in RFC 2136 [RFC2136] or in the link-local
   case through asynchronous multicast DNS responses as described in
   RFC 6762 [RFC6762].  This document specifies a protocol for
   interested unicast DNS clients to subscribe to DNS servers to receive
   new, changed, and withdrawn DNS record notifications.  It is
   immediately relevant in the case of DNS service discovery but is not
   limited to that use case and provides a general DNS mechanism for DNS
   record change notifications.  Familiarity with the DNS protocol and
   DNS packet formats is assumed.





Pusateri & Cheshire     Expires September 9, 2015               [Page 2]

Internet-Draft              DNS Push Updates                  March 2015


1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Motivation

   As the domain name system continues to adapt to new uses and changes
   in deployment, polling frequency has the potential to burden DNS
   servers at many levels throughout the network.  Other network
   protocols have successfully deployed a publish/subscribe model to
   state changes following the Observer design pattern.  XMPP Publish-
   Subscribe [XEP-0060] and Atom [RFC4287] are examples.  While most DNS
   servers are highly tuned and capable of a high rate of query/response
   traffic, it is far more efficient in both bandwidth and CPU to
   replace the polling model with a publish/subscribe model for tracking
   changes to DNS records.

   Immediate uses include updates to PTR, SRV, and TXT records when
   using unicast DNS for service discovery.  This allows new services to
   be quickly discovered and changed parameters to be sent directly to
   interested parties.

   Multicast DNS always listens on a well known link-local IP multicast
   group and new services and updates are sent for all group members to
   receive.  Therefore, this protocol is not needed in a strict
   multicast DNS environment.  However, when service discovery is used
   across a wide area network over unicast DNS or in a hybrid unicast/
   multicast proxy [I-D.ietf-dnssd-hybrid], it provides a mechanism for
   clients to learn about DNS record changes in a timely manner without
   polling.

   DNS Long-Lived Queries (LLQ) was a prior attempt at providing
   notifications of changes to DNS records.  This document builds on the
   experience gained with LLQ but re-uses the UPDATE mechanism defined
   in RFC 2136 [RFC2136] to leverage a widely deployed DNS technology.

3.  Overview

   DNS UPDATE was defined to provide a mechanism for clients to add or
   delete resource records (RRs) or resource record sets (RRSets) in the
   client's zone on the zone's server.  However, by sending UPDATE
   messages from the server back to interested clients, it is possible
   to use the UPDATE protocol for a server to push out updates for the
   resource records and resource record sets as they are discovered.
   The client first must subscribe to an RR or RRset with a server that
   supports DNS Push Updates.  When the client loses interest in updates



Pusateri & Cheshire     Expires September 9, 2015               [Page 3]

Internet-Draft              DNS Push Updates                  March 2015


   to these records, it unsubscribes with the server.  The DNS Push
   Update server for a zone MAY be a slave server, master server, or
   primary master server as defined in RFC 2136 [RFC2136].

   DNS Push Update clients are NOT required to implement DNS Update
   Prerequisite processing.  Prerequisites are used to perform tentative
   atomic test-and-set type operations on the server, and that concept
   has no application when it comes to an authoritative server telling a
   client of changes to DNS records.

4.  Transport

   Implementations of DNS UPDATE MAY use either User Datagram Protocol
   (UDP) [RFC0768] or Transmission Control Protocol (TCP) [RFC0793] as
   the transport protocol according to Section 2.1 of RFC 2136
   [RFC2136].  However, the DNS Push Update protocol may be simplified
   if running over TCP because explicit teardown of subscription state
   is not needed.  Therefore, this specification makes the use of TCP
   REQUIRED.  The requirement in Section 6.1.3.2 of RFC 1123 [RFC1123]
   that states a query MUST be sent over UDP first has been relaxed in
   Section 4 of RFC 5966 [RFC5966].  Therefore, it is now permissible to
   define a TCP-only protocol for DNS.

   Either end of the TCP connection can terminate all of its
   subscriptions by simply closing the connection.  No DNS protocol
   message passing is needed.  The lifetime of the subscriptions are
   tied to the lifetime of the transport protocol connection.
   Individual subscriptions may be dropped by request.  If a client
   closes the connection, it is signaling that it is no longer
   interested in receiving updates to any of the records it has
   subscribed.  It is informing the server that the server may release
   all state information it has been keeping with regards to this
   client.  This may occur because the client computer has been
   disconnected from the network, has gone to sleep, or the application
   requiring the records has terminated.  If a server closes the
   connection, it is informing the client that it can no longer provide
   updates for the subscribed records.  This may occur because the
   server application software or operating system is restarting, the
   application terminated unexpectedly, the server is undergoing
   maintenance procedures, or the server is overloaded and can no longer
   provide the information to all the clients that wish to receive it.
   The client can try to re-subscribe at a later time or to another DNS
   server supporting DNS Push Updates for the zone.

   Transport Layer Security (TLS) [RFC5246] is well understood and
   deployed across many protocols running over TCP.  It is designed to
   prevent eavesdropping, tampering, or message forgery.  TLS is




Pusateri & Cheshire     Expires September 9, 2015               [Page 4]

Internet-Draft              DNS Push Updates                  March 2015


   REQUIRED for every connection between a client subscriber and server
   in this protocol specification.

   Connection setup over TCP ensures return reachability and alleviates
   concerns of state overload at the server through anonymous
   subscriptions.  All subscribers are guaranteed to be reachable by the
   server.  Additional security measures such as authentication during
   TLS negotiation MAY also be employed to increase the trust
   relationship between client and server.  Because TCP SYN flooding
   attacks are possible with any protocol over TCP, implementors are
   encouraged to use well known end host and network based
   countermeasures, see [IPJ.9-4-TCPSYN].

5.  State Considerations

   Each DNS server is only capable and handling some finite number of
   DNS record subscriptions.  This number will vary from DNS server to
   DNS server and is based on physical machine characteristics, network
   bandwidth, and operating system resource allocation.  After a client
   establishes a connection to a DNS server, each record subscription is
   individually accepted or rejected.  Servers may employ various
   techniques to limit subscriptions to a manageable level.
   Correspondingly, the client is free to establish simultaneous
   connections to alternate DNS servers that support DNS Push Updates
   for the zone and distribute record subscriptions at its discretion.
   In this way, both clients and servers can react to resource
   constraints.  Token bucket rate limiting schemes are also effective
   in providing fairness by a server across numerous client requests.

6.  Protocol Operation

6.1.  Discovery

   The first step to DNS Push Update subscription is to discover an
   appropriate DNS server that supports DNS Push Updates for the desired
   zone.  The client must also determine which TCP port on the server is
   listening for connections.

   1.  The client begins the discovery by sending a DNS query to the
       local resolver with record type SOA [RFC1035] for the name of the
       record it wishes to subscribe.

   2.  If the SOA record exists, it MUST be returned in the Answer
       section of the reply.  If not, the server SHOULD include the SOA
       record for the zone of the requested name in the Authority
       section.





Pusateri & Cheshire     Expires September 9, 2015               [Page 5]

Internet-Draft              DNS Push Updates                  March 2015


   3.  If no SOA record is returned, the client then strips off the
       leading label from the requested name and resends the SOA query
       until the SOA has been discovered.

   4.  If an SOA record is never returned, discovery ends here and the
       zone must be correctly configured to proceed.

   5.  Once the SOA is known, the client sends a query with type SRV
       [RFC2782] for the record name "_dns-push._tcp.<zone>" to the SOA
       master name "(mname)".

   6.  A DNS server implementing DNS Push Updates for the zone MUST
       answer with an SRV record in the Answer section.  The SRV
       "target" contains the name of the DNS server providing DNS Push
       Updates for the zone.  The port number on which to contact the
       server is in the SRV record "port" field.  The DNS server MAY
       include its address records in the Additional section, however,
       the address records SHOULD be authenticated before use as
       referenced in Section 9.2 and described in [I-D.ietf-dane-srv].

   7.  If the DNS server in the SOA does not support DNS Push Updates,
       it MUST return an "NXDOMAIN RCODE".

   8.  The SRV "target" and the SOA "mname" SHOULD be the same.  If they
       are not, the name in the SRV "target" SHOULD be preferred.

   9.  More than one SRV record may be returned.  In this case, the
       "priority" and "weight" values in the returned SRV records can be
       used to determine the order in which to contact the servers for
       subscription requests.  As described in RFC 2782 [RFC2782], the
       server with the lowest "priority" is first contacted.  If more
       than one server has the same "priority", the "weight" is used as
       a probability indicator.  Higher weights have higher
       probabilities of being selected.  If a server is not reachable or
       is not willing to accept a subscription request, then a
       subsequent server is to be contacted.

   If a server closes a DNS Push Update subscription connection, the
   client may wish to repeat the discovery process in order to determine
   the preferred DNS server for subscriptions at that time.

6.2.  UPDATE Additions

   A DNS Push Update client will inform the DNS Push Update server by
   sending a subscription request to the server.  The server has the
   option to accept or reject the subscription request.  If accepted,
   the subscription request will stay in effect until the client revokes




Pusateri & Cheshire     Expires September 9, 2015               [Page 6]

Internet-Draft              DNS Push Updates                  March 2015


   the subscription or until the connection between the client and the
   server is closed.

6.2.1.  DNS Update Header Format

   The following figure shows the augmented DNS header UPDATE format
   including two new bit definitions.

                                             1  1  1  1  1  1
               0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |                      ID                       |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |QR|   Opcode  |CS|SS|       Z      |   RCODE   |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |                    ZOCOUNT                    |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |                    PRCOUNT                    |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |                    UPCOUNT                    |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |                    ADCOUNT                    |
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+

                                 Figure 1

6.2.2.  Zone Section

   As specified in Section 2.3 of RFC 2136 [RFC2136], the Zone
   Section contains exactly one resource record of type SOA with the
   name of the zone for which all records contained in the Update
   Section MUST be included.  This is the same zone that is discovered
   in Section 6.1.

6.2.3.  Prerequisite Section

   The Prerequesite Section MUST be empty.  The client is receiving push
   notifications from an authoritative server and prerequisites are not
   applicable.  The ZOCOUNT MUST be zero.

6.2.4.  Update Section

   The server will send all matching records for a SUBSCRIBE to the
   requesting client in the Update Section until an UNSUBSCRIBE is
   received or the connection is closed.  If the resource record CLASS
   is ANY, the server is informing the client that the record has been
   deleted.  If the type is ANY, all records matching the resource
   record name are deleted.  If the TYPE is not ANY, only records of



Pusateri & Cheshire     Expires September 9, 2015               [Page 7]

Internet-Draft              DNS Push Updates                  March 2015


   that TYPE are deleted.  If the CLASS matches the CLASS of the SOA
   record in the Zone Section, the server is informing the client that
   the record has been added.  A TYPE of ANY is not allowed for an add
   notification.

   Client handling of the Update Section is described below in
   Section 6.2.6.

6.2.5.  Additional Data Section

   The Additional Data Section MUST be empty.  The ADCOUNT MUST be zero.

6.2.6.  Push Update SUBSCRIBE and UNSUBSCRIBE

   The DNS Update header reserves seven Z bits for future use.  This
   specification defines the Z bit in position 5 for client setup (CS).
   When this bit is cleared, a normal client UPDATE message is expected
   as defined in RFC 2136 [RFC2136].  When set, Z bit 5 declares the Z
   bit in position 6 for subscription setup (SS) purposes.  A SUBSCRIBE
   is indicated by setting the SS bit while an UNSUBSCRIBE is indicated
   by clearing the SS bit.

   The Update Section contains the resource records for which the client
   requests a SUBSCRIBE or UNSUBSCRIBE.  The number of records in the
   Update Section is not limited.  However, all of the records MUST fall
   within the Zone in the Zone Section.  The server MUST accept or
   reject SUBSCRIBE or UNSUBSCRIBE requests for all records in the
   Update Section with a single response error code.  Therefore, it is
   RECOMMENDED that UPCOUNT is set to one for client requests.

   The client MAY SUBSCRIBE to records that are unknown to the server at
   the time of the request.  The server MUST accept these requests and
   send Push Updates when matches are found in the future.

6.2.7.  Push Update RCODES

   If the server is willing to accept the SUBSCRIBE request from the
   client, it returns an UPDATE response with the RCODE set to NOERROR.
   Otherwise, an appropriate error code MUST be returned.  The following
   table describes when each response error code is appropriate for a
   SUBSCRIBE or UNSUBSCRIBE request.










Pusateri & Cheshire     Expires September 9, 2015               [Page 8]

Internet-Draft              DNS Push Updates                  March 2015


   +-----------+-------+-----------------------------------------------+
   | Mneumonic | Value | Description                                   |
   +-----------+-------+-----------------------------------------------+
   | NOERROR   |   0   | SUBSCRIBE or UNSUBSCRIBE successful           |
   | FORMERR   |   1   | Server failed to process request due to a     |
   |           |       | format error                                  |
   | SERVFAIL  |   2   | Server failed to process request due to an    |
   |           |       | internal error                                |
   | NXDOMAIN  |   3   |                                               |
   | NOTIMP    |   4   | Server does not implement DNS Push Updates    |
   | REFUSED   |   5   | Server refuses to process request for policy  |
   |           |       | or security reasons                           |
   | YXDOMAIN  |   6   | NOT USED                                      |
   | YXRRSET   |   7   | NOT USED                                      |
   | NXRRSET   |   8   | NOT USED                                      |
   | NOTAUTH   |   9   | Server not authoritative for the zone in the  |
   |           |       | Zone Section                                  |
   | NOTZONE   |   10  | Zone in the Update Section not within zone in |
   |           |       | Zone Section                                  |
   +-----------+-------+-----------------------------------------------+

                          Table 1: Response codes

7.  Acknowledgements

   The authors would like to thank Kiren Sekar and Marc Krochmal for
   previous work completed in this field.  This draft has been improved
   due to comments from Ran Atkinson.

8.  IANA Considerations

   This document defines the service name: "_dns-push._tcp".  It is only
   applicable for the TCP protocol.  This name is to be published in the
   IANA Service Name Registry.

9.  Security Considerations

   Strict TLS support is mandatory in DNS Push Updates.  There is no
   provision for opportunistic encryption using a mechanism like
   "STARTTLS".

9.1.  Security Services

   It is the goal of using TLS to provide the following security
   services:






Pusateri & Cheshire     Expires September 9, 2015               [Page 9]

Internet-Draft              DNS Push Updates                  March 2015


   Confidentiality  All application-layer communication is encrypted
      with the goal that no party should be able to decrypt it except
      the intended receiver.

   Data integrity protection  Any changes made to the communication in
      transit are detectable by the receiver.

   Authentication  An end-point of the TLS communication is
      authenticated as the intended entity to communicate with.

   Deployment recommendations on the appropriate key lengths and cypher
   suites are beyond the scope of this document.  Please refer to TLS
   Recommendations [I-D.ietf-uta-tls-bcp] for the best current
   practices.  Keep in mind that best practices only exist for a
   snapshot in time and recommendations will continue to change.
   Updated versions or errata may exist for these recommendations.

9.2.  TLS Name Authentication

   As described in Section 6.1, the client discovers the DNS Push Update
   server using an SRV lookup for the record name "_dns-
   push._tcp.<zone>".  The server connection endpoint SHOULD then be
   authenticated using DANE TLSA records for the associated SRV record.
   This associates the target's name and port number with a trusted TLS
   certificate.  This procedure is specified in [I-D.ietf-dane-srv].
   This procedure uses the TLS Sever Name Indication (SNI) extension in
   Section 3 of RFC 6066 [RFC6066] to inform the server of the name the
   client has authenticated through the use of TLSA records.

9.3.  TLS Compression

   In order to reduce the chances of compression related attacks, TLS-
   level compression SHOULD be disabled when using TLS versions 1.2 and
   earlier.  In the draft version of TLS 1.3 [I-D.ietf-tls-tls13], TLS-
   level compression has been removed completely.

9.4.  TLS Session Resumption

   TLS Session Resumption MUST be disabled on DNS Push Update servers.
   It is not useful to have subscription state cached for long periods
   of time.  It is also not desirable for subscription state to be
   maintained while the client is not connected.

10.  References







Pusateri & Cheshire     Expires September 9, 2015              [Page 10]

Internet-Draft              DNS Push Updates                  March 2015


10.1.  Normative References

   [I-D.ietf-dane-srv]
              Finch, T., Miller, M., and P. Saint-Andre, "Using DNS-
              Based Authentication of Named Entities (DANE) TLSA Records
              with SRV Records", draft-ietf-dane-srv-11 (work in
              progress), February 2015.

   [I-D.ietf-dnssd-hybrid]
              Cheshire, S., "Hybrid Unicast/Multicast DNS-Based Service
              Discovery", draft-ietf-dnssd-hybrid-00 (work in progress),
              November 2014.

   [I-D.ietf-tls-tls13]
              Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.3", draft-ietf-tls-tls13-04 (work
              in progress), January 2015.

   [I-D.ietf-uta-tls-bcp]
              Sheffer, Y., Holz, R., and P. Saint-Andre,
              "Recommendations for Secure Use of TLS and DTLS", draft-
              ietf-uta-tls-bcp-11 (work in progress), February 2015.

   [RFC0768]  Postel, J., "User Datagram Protocol", STD 6, RFC 768,
              August 1980.

   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7, RFC
              793, September 1981.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, November 1987.

   [RFC1123]  Braden, R., "Requirements for Internet Hosts - Application
              and Support", STD 3, RFC 1123, October 1989.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2136]  Vixie, P., Thomson, S., Rekhter, Y., and J. Bound,
              "Dynamic Updates in the Domain Name System (DNS UPDATE)",
              RFC 2136, April 1997.

   [RFC2782]  Gulbrandsen, A., Vixie, P., and L. Esibov, "A DNS RR for
              specifying the location of services (DNS SRV)", RFC 2782,
              February 2000.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.



Pusateri & Cheshire     Expires September 9, 2015              [Page 11]

Internet-Draft              DNS Push Updates                  March 2015


   [RFC5966]  Bellis, R., "DNS Transport over TCP - Implementation
              Requirements", RFC 5966, August 2010.

   [RFC6066]  Eastlake, D., "Transport Layer Security (TLS) Extensions:
              Extension Definitions", RFC 6066, January 2011.

   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,
              February 2013.

10.2.  Informative References

   [IPJ.9-4-TCPSYN]
              Eddy, W., "Defenses Against TCP SYN Flooding Attacks", The
              Internet Protocol Journal, Cisco Systems, Volume 9, Number
              4, December 2006.

   [RFC4287]  Nottingham, M., Ed. and R. Sayre, Ed., "The Atom
              Syndication Format", RFC 4287, December 2005.

   [XEP-0060]
              Millard, P., Saint-Andre, P., and R. Meijer, "Publish-
              Subscribe", XSF XEP 0060, July 2010.

Authors' Addresses

   Tom Pusateri
   Seeking affiliation
   Hilton Head Island, SC
   USA

   Phone: +1 843 473 7394
   Email: pusateri@bangj.com


   Stuart Cheshire
   Apple Inc.
   1 Infinite Loop
   Cupertino, CA  95014
   USA

   Phone: +1 408 974 3207
   Email: cheshire@apple.com









Pusateri & Cheshire     Expires September 9, 2015              [Page 12]
